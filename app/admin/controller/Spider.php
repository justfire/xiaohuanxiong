<?php


namespace app\admin\controller;


use app\model\BookLogs;
use think\db\exception\DataNotFoundException;
use think\db\exception\ModelNotFoundException;
use think\exception\ValidateException;
use think\facade\Db;
use think\facade\View;

class Spider extends Base
{
    protected $booklogService;
    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->booklogService = app('booklogService');
    }

    public function index() {
        $data = $this->booklogService->getPageAdmin();
        View::assign([
            'logs' => $data['logs'],
            'count' => $data['count']
        ]);
        return view();
    }

    public function edit() {
        $data = request()->param();
        try {
            $log = BookLogs::findOrFail($data['id']);
            if (request()->isPost()) {
                $result = $log->save($data);
                if ($result) {
                    $this->success('编辑成功');
                } else {
                    throw new ValidateException('修改失败');
                }
            } else {
                View::assign([
                    'log' => $log
                ]);
            }
        } catch (DataNotFoundException $e) {
            abort(404, $e->getMessage());
        } catch (ModelNotFoundException $e) {
            abort(404, $e->getMessage());
        }
        return view();

    }

    public function search()
    {
        $name = input('book_name');
        $where = [
            ['book_name', 'like', '%' . $name . '%']
        ];
        $data = $this->booklogService->getPageAdmin($where);
        View::assign([
            'logs' => $data['logs'],
            'count' => $data['count']
        ]);
        return view('index');
    }
}