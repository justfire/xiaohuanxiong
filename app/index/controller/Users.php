<?php


namespace app\index\controller;

use app\model\SystemUsers;
use app\model\UserFavor;
use think\db\exception\DataNotFoundException;
use think\db\exception\ModelNotFoundException;
use think\facade\Validate;
use think\facade\View;

class Users extends BaseUc
{
    protected $userModel;

    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->userModel = app('userModel');
    }

    public function ucenter()
    {
        return view($this->tpl);
    }

    public function userinfo()
    {
        $nick_name = input('nick_name');
        $email = input('email');
        try {
            $this->user->name = $nick_name;
            $this->user->email = $email;
            $result = $this->user->save();
            if ($result) {
                session('xwx_nick_name', $nick_name);
                return json(['msg' => '修改成功', 'err' => 0]);
            } else {
                return json(['msg' => '修改失败', 'err' => 1]);
            }
        } catch (DataNotFoundException $e) {
            return json(['msg' => '用户不存在', 'err' => 1]);
        } catch (ModelNotFoundException $e) {
            return json(['msg' => '用户不存在', 'err' => 1]);
        }
    }

    public function addfavor()
    {
        if (request()->isPost()) {
            if (!empty(cookie('favor_lock:' . $this->uid))) { //如果存在锁
                return json(['err' => 1, 'msg' => '操作太频繁']);
            } else {
               cookie('favor_lock:' . $this->uid, 1, 3); //写入锁
                $articleid = input('articleid');

                $where[] = ['articleid', '=', $articleid];
                $where[] = ['uid', '=', $this->uid];
                try {
                    UserFavor::where($where)->findOrFail();
                    return json(['err' => 1, 'msg' => '已加入书架']); //isfavor表示已收藏
                } catch (ModelNotFoundException $e) {
                    $userFaver = new UserFavor();
                    $userFaver->articleid = $articleid;
                    $userFaver->uid = $this->uid;
                    $userFaver->save();
                    return json(['err' => 0, 'msg' => '成功加入书架']); //isfavor表示已收藏
                }
            }
        }
        return json(['err' => 1, 'msg' => '不是post请求']);
    }

    public function bookshelf()
    {
        return view($this->tpl);
    }

    public function delfavors()
    {
        $id = explode(',', input('id')); //书籍id;
        $this->userModel->delFavors($this->uid, $id);
        return json(['err' => 0, 'msg' => '删除收藏']);
    }

    public function history()
    {
        return view($this->tpl);
    }

    public function resetpwd()
    {
        if ($this->request->isPost()) {
            $pwd = input('password');
            $validate = new Validate();
            $validate->rule('password', 'require|min:6|max:21');

            $data = [
                'password' => $pwd,
            ];
            if (!$validate->check($data)) {
                return ['msg' => '密码在6到21位之间', 'err' => 1];
            }
            try {
                $user = SystemUsers::findOrFail($this->uid);
                $user->password = $pwd;
                $user->save();
                return ['msg' => '修改成功', 'err' => 0];
            } catch (DataNotFoundException $e) {
                return ['msg' => '用户不存在', 'err' => 1];
            } catch (ModelNotFoundException $e) {
                return ['msg' => '用户不存在', 'err' => 1];
            }
        }
        return view($this->tpl);
    }
}